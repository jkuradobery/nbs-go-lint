package example

import (
	"fmt"
)

////////////////////////////////////////////////////////////////////////////////

func first() {
	fmt.Println("First function in example package")
}

////////////////////////////////////////////////////////////////////////////////

func Second() {
	fmt.Println("Second function in example package")
}

////////////////////////////////////////////////////////////////////////////////

type Example struct {
	Name string
}

func NewExample(name string) *Example {
	return &Example{Name: name}
}

func (e *Example) SetName(name string) {
	e.Name = name
}

////////////////////////////////////////////////////////////////////////////////

func (e *Example) Greet() {
	fmt.Printf("Hello, %s!\n", e.Name)
}

func (e *Example) Farewell() {
	fmt.Printf("Goodbye, %s!\n", e.Name)
}

////////////////////////////////////////////////////////////////////////////////

func (e *Example) s() string {
	return "This is a private method"
}

////////////////////////////////////////////////////////////////////////////////

type SomeStruct struct {
	Name string
}

////////////////////////////////////////////////////////////////////////////////

func (s *SomeStruct) DoSomething() {
	fmt.Printf("Doing something, %s!\n", s.Name)
}

////////////////////////////////////////////////////////////////////////////////

func (s *SomeStruct) doSomethingElse() {
	fmt.Printf("Doing something else, %s!\n", s.Name)
}
